Newspeak3
'Root'
public class IndexedDBTesting usingPlatform: p
										minitest: minitest
                                        indexedDB: idb
(*
	:exemplar: IndexedDBTesting usingPlatform: platform
										minitest: (Minitest usingPlatform: platform)
                                        indexedDB: (IndexedDB usingPlatform: platform)
*)
= (
	|
	private TestContext = minitest TestContext.
    private List = p collections List.
    private IDBSubject = idb IDBSubject.
    private IDBObject = idb IDBObject.

    indexedDB = idb.
	|
) (
public class TestHarness = (
	|
	subject = IDBTestingSubject onModel: List new.
    testModel = IDBTestingModel new slot1: 'test1'; slot2: 'foo'; yourself.
    testChildModel1 = IDBTestingChildModel new slotA: 'foo'; slotB: 'bar'; yourself.
    testChildModel2 = IDBTestingChildModel new slotA: 'bar'; slotB: 'baz'; yourself.
    errors = List new.
	|
    subject openDB: 1. (* version number injection? *)
) (
public class IDBTestingSubject onModel: m = IDBSubject onModel: m modelClasses: { IDBTestingModel } (
) (
public deleteTestObject = (
	| 
    m = IDBTestingModel new slot1: 'delete me'; slot2: 'deleted'; yourself.
    rslt
    |
    add: m.
	delete: m
    			onComplete: [ :e | rslt: true. nil ]
                onError: [ :e | rslt: false. nil ].
	^rslt
)
public addTestObject = (
	|
    m = IDBTestingModel new slot1: 'add me'; slot2: 'added'; yourself.
    rslt
    |
    halt.
	add: m
    		onComplete: [ :e | rslt: true. nil ]
            onError: [ :e | rslt: false. nil ].
    ^rslt
)
public putTestObject = (
	|
    m = IDBTestingModel new slot1: 'put me'; slot2: 'putted'; yourself.
    rslt
    |
	halt.
	add: m.
    m slot2: 'changed value'.
	put: m
    		onComplete: [ :e | rslt: true. nil ]
            onError: [ :e | rslt: false. nil ].
    ^rslt
)
) : (
)
public class IDBTestingModel = IDBObject (
	|
	public slot1
	public slot2
	|
) (
) : (
)
public class IDBTests = TestContext (
) (
public cleanUp = (
	(* indexedDB deleteDatabase: 'List' *)
)
public testOpen = (
	(* getAll/onGetAll? *)
)
public testAdd = (
	 assert: [ subject addTestObject ]
     message: 'Add failed'.
)
public testPut = (
	assert: [ subject putTestObject ]
    message: 'Put failed'
)
public testDelete = (
	assert: [ subject deleteTestObject ]
    message: 'Failed to delete model'.
)
) : (
TEST_CONTEXT = ()
)
public class IDBTestingChildModel = (
	|
	public slotA
	public slotB
	|
) (
) : (
)
) : (
)
) : (
)
